#include <string.h>
#include <iostream>

typedef struct {
    int rota[42];  // Caso max.
    int custo;     // Custo do percurso
} percurso;

typedef percurso queue_element;
#include "..\lib\QueueCF.h"

using namespace std;

void local_arestas(int **mat_adj, int op_cidade) {
    // Para fazer
}

int main() {
    // Declaracao e inicializacao de variaveis uteis
    int i = 0, j = 0, k = 0;
    int menor_custo = 99999;
    int menor_rota[42] = {0};
    memset(menor_rota, -1, 42 * sizeof(int));

    // Matriz de adjacencia p/ 42 cidades
    int mat_adj[][42] = {
        /*       00   01   02   03   04   05   06   07   08   09   10   11   12   13   14   15   16   17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32   33   34   35   36   37   38   39   40   41 */
        /*00*/ {000, 000, 420, 420, 000, 000, 500, 000, 670, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*01*/ {000, 000, 000, 000, 530, 000, 000, 160, 930, 000, 170, 120, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 540, 000, 000},
        /*02*/ {420, 000, 000, 580, 520, 300, 000, 000, 000, 000, 000, 000, 000, 000, 000, 780, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*03*/ {420, 000, 580, 000, 000, 640, 170, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*04*/ {000, 530, 520, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 420, 000, 000, 660, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*05*/ {000, 000, 300, 640, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 380, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*06*/ {500, 000, 000, 170, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*07*/ {000, 160, 000, 000, 000, 000, 000, 000, 000, 000, 800, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 1340, 000, 000, 000, 000},
        /*08*/ {670, 930, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*09*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 350, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*10*/ {000, 170, 000, 000, 000, 000, 000, 800, 000, 000, 000, 180, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*11*/ {000, 120, 000, 000, 000, 000, 000, 000, 000, 000, 180, 000, 000, 000, 000, 000, 000, 000, 000, 730, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*12*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 470, 000, 440, 360, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*13*/ {000, 000, 000, 000, 420, 000, 000, 000, 000, 000, 000, 000, 470, 000, 270, 290, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*14*/ {000, 000, 000, 000, 000, 380, 000, 000, 000, 000, 000, 000, 000, 270, 000, 160, 000, 120, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*15*/ {000, 000, 780, 000, 000, 000, 000, 000, 000, 000, 000, 000, 440, 290, 160, 000, 000, 140, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*16*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 350, 000, 000, 360, 000, 000, 000, 000, 350, 000, 1070, 000, 000, 000, 000, 000, 000, 000, 000, 990, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*17*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 120, 140, 350, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*18*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 790, 000, 000, 000, 210, 000, 240, 470, 440, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 560, 000},
        /*19*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 730, 1070, 000, 790, 000, 000, 250, 320, 000, 000, 000, 000, 000, 280, 000, 000, 000, 000, 000, 000, 550, 000, 000, 000, 000, 000, 000},
        /*20*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 030, 000, 000, 180, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*21*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 250, 000, 000, 000, 000, 000, 000, 530, 000, 310, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*22*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 320, 000, 000, 000, 140, 000, 000, 000, 000, 000, 400, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*23*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 390, 000, 000, 000, 140, 000, 000, 210, 000, 000, 000, 290, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*24*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 030, 000, 000, 000, 000, 000, 860, 230, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*25*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 240, 000, 000, 000, 000, 210, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 290, 000, 000, 000, 000, 000, 710, 000},
        /*26*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 470, 000, 000, 530, 000, 000, 860, 000, 000, 640, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*27*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 440, 000, 180, 000, 000, 000, 230, 000, 640, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*28*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 990, 000, 000, 280, 000, 310, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000},
        /*29*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 400, 290, 000, 000, 000, 000, 000, 000, 000, 000, 300, 000, 250, 250, 000, 000, 000, 000, 000, 000},
        /*30*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 170, 000, 650, 000, 000, 000, 000, 150, 000, 000, 000},
        /*31*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 170, 000, 000, 000, 000, 000, 000, 000, 210, 000, 000, 000},
        /*32*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 300, 000, 000, 000, 280, 180, 000, 90, 410, 000, 470, 000, 700},
        /*33*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 650, 000, 280, 000, 000, 000, 000, 000, 640, 000, 000, 530},
        /*34*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 290, 000, 000, 000, 250, 000, 000, 180, 000, 000, 000, 000, 000, 000, 000, 000, 590},
        /*35*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 550, 000, 000, 000, 000, 000, 000, 000, 000, 000, 250, 000, 000, 000, 000, 000, 000, 000, 000, 000, 190, 000, 000},
        /*36*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 90, 000, 000, 000, 000, 340, 000, 000, 000, 000},
        /*37*/ {000, 000, 000, 000, 000, 000, 000, 000, 1340, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 410, 000, 000, 000, 340, 000, 000, 380, 000, 000},
        /*38*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 150, 210, 000, 640, 000, 000, 000, 000, 000, 000, 000, 240},
        /*39*/ {000, 540, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 470, 000, 000, 190, 000, 380, 000, 000, 000, 000},
        /*40*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 560, 000, 000, 000, 000, 000, 000, 710, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 200},
        /*41*/ {000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 000, 700, 530, 590, 000, 000, 000, 240, 000, 200, 000}};

    // Declaracao e inicializacao da fila
    Queue Q;
    initQueue(Q);
    queue_element x;
    x.rota[0] = 6;
    x.custo = 0;
    insert(Q, x);

    while (isEmptyQ(Q)) {
        // Para fazer
    }

    i = 0;
    while (menor_rota[i++] != -1) {
        cout << menor_rota[i - 1];
    }
    return 0;
}